name: Build iOS

on: [workflow_dispatch]

env:
  TEAM_ID: CQHX8VZ8F7
  PROVISIONING_PROFILE: Custom Mobile App Store
  IPA_FILE: Custom Mobile.ipa

jobs:
  build-ios:
    name: Build iOS
    runs-on: macos-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.IOS_P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: K3ych@1nP@ssw0rd
          BUILD_GOOGLESERVICE_PLIST_BASE64: ${{ secrets.IOS_GOOGLESERVICE_PLIST_BASE64 }}
        run: |
          # import GoogleService-info plist
          echo -n "$BUILD_GOOGLESERVICE_PLIST_BASE64" | base64 --decode --output ios-GoogleService-Info.plist

          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Install Cordova
        run: npm install -g cordova

      - name: Add Cordova iOS platform
        run: cordova platform add ios@6.2.0

      - name: Add custom cordova-plugin-inappbrowser
        run: cordova plugin add cordova-plugin-inappbrowser@5.0.0

      - name: Add cordova-plugin-device
        run: cordova plugin add cordova-plugin-device@2.1.0

      - name: Add cordova-plugin-push
        run: cordova plugin add @havesource/cordova-plugin-push@3.0.1

      - name: Add cordova-plugin-statusbar
        run: cordova plugin add cordova-plugin-statusbar@3.0.0

      - name: Add cordova-plugin-media-capture
        run: cordova plugin add cordova-plugin-media-capture@4.0.0

      - name: Add cordova-plugin-dialogs
        run: cordova plugin add cordova-plugin-dialogs@2.0.2

      - name: Add cordova-plugin-vibration
        run: cordova plugin add cordova-plugin-vibration@3.1.1

      - name: Add cordova-plugin-geolocation
        run: cordova plugin add cordova-plugin-geolocation@4.1.0

      - name: Build iOS
        run: cordova build ios --release

      - name: Upload Xcode workspace
        uses: actions/upload-artifact@v3
        with:
          name: xcworkspace
          path: platforms/ios/

      - name: Build IPA
        run: |
          # build and export archive as ipa
          cordova build ios --release --device --codeSignIdentity="iPhone Distribution" --developmentTeam="$TEAM_ID" --packageType="app-store" --provisioningProfile="$PROVISIONING_PROFILE" --buildFlag="CODE_SIGNING_REQUIRED=NO" --buildFlag="CODE_SIGNING_ALLOWED=NO"

      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: ios-app-release
          path: platforms/ios/build/device/${{ env.IPA_FILE }}

